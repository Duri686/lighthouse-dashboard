name: Lighthouse CI
on:
  push:
    branches:
      - main
      - master
    paths-ignore:
      - 'reports/**'  # 忽略报告目录的更改，防止循环触发
  schedule:
    - cron: '0 */6 * * *'
  workflow_dispatch:

# 添加权限配置
permissions:
  contents: write
  pages: write

jobs:
  lighthouse:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # 更新到 Node.js 18

      - name: Install Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y wget gnupg2
          wget -q https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt-get install -y ./google-chrome-stable_current_amd64.deb
          google-chrome --version

      - name: Install dependencies
        run: |
          npm init -y
          npm install -g @lhci/cli@0.12.x
          echo "node_modules/" > .gitignore
          echo ".lighthouseci/" >> .gitignore
          echo "*.deb" >> .gitignore

      - name: Run Lighthouse and Process Reports
        run: |
          # 确保报告目录存在
          mkdir -p reports
          NOW=$(date -u +"%Y-%m-%dT%H:%M:%S")
          
          # 运行桌面版测试
          echo "Running Desktop test..."
          lhci collect \
            --url https://www.fadada.com \
            --settings.preset=desktop \
            --settings.chromeFlags="--no-sandbox --headless=new --disable-gpu" \
            --settings.maxWaitForLoad=30000 \
            --output=json \
            --outDir=./reports \
            --numberOfRuns=1

          # 运行移动版测试
          echo "Running Mobile test..."
          lhci collect \
            --url https://www.fadada.com \
            --settings.formFactor=mobile \
            --settings.screenEmulation.mobile=true \
            --settings.screenEmulation.width=360 \
            --settings.screenEmulation.height=640 \
            --settings.screenEmulation.deviceScaleFactor=2 \
            --settings.chromeFlags="--no-sandbox --headless=new --disable-gpu" \
            --settings.maxWaitForLoad=30000 \
            --output=json \
            --outDir=./reports \
            --numberOfRuns=1

          echo "Moving Lighthouse results to reports directory:"
          echo "Checking .lighthouseci contents:"
          ls -la .lighthouseci/ || true
          
          # 直接将新报告输出到 reports 目录
          # 为新报告添加设备类型标识
          for file in .lighthouseci/lhr-*.json; do
            if [ -f "$file" ]; then
              FILENAME=$(basename "$file")
              if grep -q "formFactor\": \"mobile\"" "$file"; then
                cp "$file" "./reports/${FILENAME%.json}-mobile.json"
              else
                cp "$file" "./reports/${FILENAME%.json}-desktop.json"
              fi
            fi
          done

          # 如果没有生成新报告则报错
          if [ ! -f "./reports/*-desktop.json" ] && [ ! -f "./reports/*-mobile.json" ]; then
            echo "Error: No reports were generated!"
            exit 1
          fi

          # 处理新生成的报告
          for report in ./reports/*-{desktop,mobile}.json; do
            if [ -f "$report" ]; then
              type=$(echo "$report" | grep -o '\(desktop\|mobile\)')
              echo "Processing $type report: $report"
              DEVICE_TYPE=$type DATE_WITH_TIME=$NOW node process-report.js "$report"
            fi
          done

      - name: List Reports Directory
        run: |
          echo "Contents of reports directory:"
          ls -la ./reports/

      - name: Cleanup and Prepare
        run: |
          rm -f google-chrome-stable_current_amd64.deb
          rm -rf .lighthouseci

      - name: Commit and push changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          # 添加所有JSON文件
          find reports -name "*.json" -exec git add {} \;
          git add .gitignore || true
          
          # 提交前检查文件状态
          git status
          
          git diff --staged --quiet || git commit -m "Update Lighthouse report $(date -u)"
          git push origin HEAD:${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}