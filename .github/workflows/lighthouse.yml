name: Lighthouse CI
on:
  push:
    branches:
      - main
      - master
    paths-ignore:
      - 'reports/**'  # 忽略报告目录的更改，防止循环触发
  schedule:
    - cron: '0 */6 * * *'
  workflow_dispatch:

# 添加权限配置
permissions:
  contents: write
  pages: write

jobs:
  lighthouse:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # 更新到 Node.js 18

      - name: Install Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y wget gnupg2
          wget -q https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt-get install -y ./google-chrome-stable_current_amd64.deb
          google-chrome --version

      - name: Install dependencies
        run: |
          npm init -y
          npm install -g @lhci/cli@0.12.x
          echo "node_modules/" > .gitignore
          echo ".lighthouseci/" >> .gitignore
          echo "*.deb" >> .gitignore

      - name: Run Lighthouse and Process Reports
        run: |
          mkdir -p reports
          NOW=$(date -u +"%Y-%m-%dT%H:%M:%S")
          DATE=$(date -u +"%Y-%m-%d")
          
          # Create separate directories for desktop and mobile tests
          mkdir -p .lighthouseci/desktop .lighthouseci/mobile
          
          # Run Desktop test
          echo "Running Desktop test..."
          lhci collect \
            --url https://www.fadada.com \
            --settings.preset=desktop \
            --settings.chromeFlags="--no-sandbox --headless=new --disable-gpu" \
            --settings.maxWaitForLoad=30000 \
            --output=json \
            --outDir=.lighthouseci/desktop \
            --numberOfRuns=1
            
          # Ensure desktop test generated files
          if [ ! -f ".lighthouseci/desktop/lhr-"*".json" ]; then
            echo "Desktop test failed to generate report"
            exit 1
          fi

          # Run Mobile test
          echo "Running Mobile test..."
          lhci collect \
            --url https://www.fadada.com \
            --preset=mobile \
            --settings.chromeFlags="--no-sandbox --headless=new --disable-gpu" \
            --settings.maxWaitForLoad=30000 \
            --output=json \
            --outDir=.lighthouseci/mobile \
            --numberOfRuns=1
            
          # Ensure mobile test generated files  
          if [ ! -f ".lighthouseci/mobile/lhr-"*".json" ]; then
            echo "Mobile test failed to generate report"
            exit 1
          fi

          # Process desktop report
          desktop_json=$(ls .lighthouseci/desktop/lhr-*.json | head -n 1)
          if [ -n "$desktop_json" ]; then
            cp "$desktop_json" "./reports/data-https___www_fadada_com_desktop-${DATE}.json"
            cp "${desktop_json%.json}.html" "./reports/data-https___www_fadada_com_desktop-${DATE}.html"
            DEVICE_TYPE=desktop DATE_WITH_TIME=$NOW node process-report.js "./reports/data-https___www_fadada_com_desktop-${DATE}.json"
          fi

          # Process mobile report
          mobile_json=$(ls .lighthouseci/mobile/lhr-*.json | head -n 1)
          if [ -n "$mobile_json" ]; then
            cp "$mobile_json" "./reports/data-https___www_fadada_com_mobile-${DATE}.json"
            cp "${mobile_json%.json}.html" "./reports/data-https___www_fadada_com_mobile-${DATE}.html"
            DEVICE_TYPE=mobile DATE_WITH_TIME=$NOW node process-report.js "./reports/data-https___www_fadada_com_mobile-${DATE}.json"
          fi

          echo "Processing Lighthouse results..."
          
          # 处理desktop报告
          desktop_json=$(ls .lighthouseci/desktop/*.json 2>/dev/null | head -n 1)
          if [ -n "$desktop_json" ]; then
            echo "Processing desktop report: $desktop_json"
            cp "$desktop_json" "./reports/data-https___www_fadada_com_desktop-${DATE}.json"
            cp "${desktop_json%.json}.html" "./reports/data-https___www_fadada_com_desktop-${DATE}.html"
            DEVICE_TYPE=desktop DATE_WITH_TIME=$NOW node process-report.js "./reports/data-https___www_fadada_com_desktop-${DATE}.json"
            found_desktop=true
          fi

          # 处理mobile报告
          mobile_json=$(ls .lighthouseci/mobile/*.json 2>/dev/null | head -n 1)
          if [ -n "$mobile_json" ]; then
            echo "Processing mobile report: $mobile_json"
            cp "$mobile_json" "./reports/data-https___www_fadada_com_mobile-${DATE}.json"
            cp "${mobile_json%.json}.html" "./reports/data-https___www_fadada_com_mobile-${DATE}.html"
            DEVICE_TYPE=mobile DATE_WITH_TIME=$NOW node process-report.js "./reports/data-https___www_fadada_com_mobile-${DATE}.json"
            found_mobile=true
          fi
          
          echo "Files in .lighthouseci:"
          ls -la .lighthouseci/
          
          # 处理所有JSON报告文件之前先记录生成的文件
          echo "=== Generated Files Summary ==="
          echo "Lighthouse test results in .lighthouseci/:"
          file_count=$(ls -1 .lighthouseci/*.json 2>/dev/null | wc -l)
          echo "Found $file_count JSON reports:"
          ls -1 .lighthouseci/*.json | while read -r file; do
            echo "- $(basename "$file")"
          done
          
          echo "Found $(ls -1 .lighthouseci/*.html 2>/dev/null | wc -l) HTML reports:"
          ls -1 .lighthouseci/*.html | while read -r file; do
            echo "- $(basename "$file")"
          done

          # 分别保存desktop和mobile的文件路径
          desktop_json=""
          desktop_html=""
          mobile_json=""
          mobile_html=""
          
          for file in .lighthouseci/*.json; do
            if [ -f "$file" ]; then
              echo "Processing file: $file"
              # 使用jq检查更多字段来确定设备类型
              if jq -e '.configSettings.screenEmulation.mobile == true' "$file" > /dev/null 2>&1; then
                device_type="mobile"
                found_mobile=true
                mobile_json="$file"
                mobile_html="${file%.json}.html"
                echo "Identified as mobile report: $file"
              else
                device_type="desktop"
                found_desktop=true
                desktop_json="$file"
                desktop_html="${file%.json}.html"
                echo "Identified as desktop report: $file"
              fi
              
              # 显示报告的配置信息以便调试
              echo "Report configuration:"
              jq '.configSettings' "$file"
              
              # 生成带时间戳的文件名
              new_json="./reports/data-https___www_fadada_com_${device_type}-${DATE}.json"
              new_html="./reports/data-https___www_fadada_com_${device_type}-${DATE}.html"
              
              echo "Copying JSON report to: $new_json"
              cp "$file" "$new_json"
              DEVICE_TYPE=$device_type DATE_WITH_TIME=$NOW node process-report.js "$new_json"
              
              # 复制HTML报告
              html_file="${file%.json}.html"
              if [ -f "$html_file" ]; then
                echo "Copying HTML report to: $new_html"
                cp "$html_file" "$new_html"
              else
                echo "Warning: HTML report not found at $html_file"
              fi
              processed_files=$((processed_files + 1))
            fi
          done

          # 验证两种报告是否都已处理
          echo "=== Device Type Verification ==="
          [ -n "$desktop_json" ] && echo "Desktop JSON found at: $desktop_json" || echo "Desktop JSON missing"
          [ -n "$desktop_html" ] && echo "Desktop HTML found at: $desktop_html" || echo "Desktop HTML missing"
          [ -n "$mobile_json" ] && echo "Mobile JSON found at: $mobile_json" || echo "Mobile JSON missing"
          [ -n "$mobile_html" ] && echo "Mobile HTML found at: $mobile_html" || echo "Mobile HTML missing"

          echo "=== File Processing Summary ==="
          echo "Desktop report found: $found_desktop"
          echo "Mobile report found: $found_mobile"
          echo "Contents of reports directory:"
          ls -la ./reports/
          
          # 更新历史记录
          if [ ! -f "reports/history.json" ]; then
            echo '{"reports":[]}' > reports/history.json
          fi
          
          # 使用临时文件来更新history.json
          jq --arg date "$NOW" \
             --arg desktop_report "data-https___www_fadada_com_desktop-${DATE}.json" \
             --arg mobile_report "data-https___www_fadada_com_mobile-${DATE}.json" \
             '.reports += [{"date": $date, "desktop": $desktop_report, "mobile": $mobile_report}]' \
             reports/history.json > reports/history.json.tmp && mv reports/history.json.tmp reports/history.json

          # 处理报告并更新history.json
          if [ ! -f "reports/history.json" ]; then
            echo '{"reports":[]}' > reports/history.json
          fi

          # 处理desktop和mobile报告并创建新的条目
          jq --arg date "$NOW" \
             --arg url "https://www.fadada.com" \
             --argjson desktop "$(DEVICE_TYPE=desktop DATE_WITH_TIME=$NOW node process-report.js "./reports/data-https___www_fadada_com_desktop-${DATE}.json")" \
             --argjson mobile "$(DEVICE_TYPE=mobile DATE_WITH_TIME=$NOW node process-report.js "./reports/data-https___www_fadada_com_mobile-${DATE}.json")" \
             '.reports += [{
                "date": $date,
                "url": $url,
                "desktop": $desktop,
                "mobile": $mobile
              }]' \
             reports/history.json > reports/history.json.tmp && mv reports/history.json.tmp reports/history.json

          echo "=== Report Status ==="
          echo "Desktop report found: $found_desktop"
          echo "Mobile report found: $found_mobile"
          echo "Reports directory contents:"
          ls -la ./reports/

          echo "=== Processing Results Summary ==="
          echo "Total files found in .lighthouseci: $file_count"
          echo "Files processed: $processed_files"
          echo "Reports generated:"
          echo "- Desktop report: $found_desktop"
          echo "- Mobile report: $found_mobile"
          
          echo "=== Final Reports Status ==="
          echo "Files in reports directory:"
          json_reports=$(find reports -name "*.json" ! -name "history.json" | wc -l)
          html_reports=$(find reports -name "*.html" | wc -l)
          echo "JSON reports (excluding history.json): $json_reports"
          echo "HTML reports: $html_reports"
          echo ""
          echo "Report files list:"
          find reports -type f -name "*.json" ! -name "history.json" -o -name "*.html" | while read -r file; do
            echo "- $(basename "$file")"
          done

      - name: List Reports Directory
        run: |
          echo "Contents of reports directory:"
          ls -la ./reports/

      - name: Cleanup and Prepare
        run: |
          rm -f google-chrome-stable_current_amd64.deb
          rm -rf .lighthouseci

      - name: Commit and push changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          echo "=== Git Status Before Add ==="
          git status
          
          # 使用find命令添加文件
          echo "Adding report files..."
          find reports -type f -name "data-https___www_fadada_com_*.json" -exec git add {} \; || true
          find reports -type f -name "data-https___www_fadada_com_*.html" -exec git add {} \; || true
          
          # 添加history.json如果存在
          if [ -f "reports/history.json" ]; then
            git add reports/history.json
          fi
          
          git add .gitignore || true
          
          echo "=== Files staged for commit ==="
          git status --short
          
          # 检查是否有文件要提交
          if git diff --cached --quiet; then
            echo "No changes to commit"
            exit 0
          else
            git commit -m "Update Lighthouse reports $(date -u)"
            git push origin "HEAD:$GITHUB_REF" || git push origin "HEAD:${GITHUB_REF#refs/heads/}"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}